# -*- coding: utf-8 -*-
"""ML_Lab_(Linear_Regression)_RA2011030010214.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GJhdPiOuDvj5fooHVbYqQkIODCcX_gee
"""

import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

from google.colab import files
upload=files.upload()

df= pd.read_excel("Life_Expectancy.xlsx")
df.head()

# Drop irrelevant columns
df = df.drop(['Country', 'Status', 'Infant_Deaths', 'Hepatitis', 'Measles', 'Underfive_Deaths', 'Diphtheria', 'HIV', 'Population', 'Malnourished10_19', 'Malnourished5_9', 'Income_Index', 'Schooling'], axis=1)

# Handle missing values
df = df.dropna()

# Split the data into training and testing sets
X = df[['Adult_Mortality']]
y = df['Expected']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Fit the model
regressor = LinearRegression()
regressor.fit(X_train, y_train)

# Predict the life expectancy for a sample input
sample_input = np.array([[200]])
predicted_life_expectancy = regressor.predict(sample_input)[0]

print('Predicted Life Expectancy:', predicted_life_expectancy)